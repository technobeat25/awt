q1
import React, { useState } from 'react';

function P5i() {
  const [inputValue, setInputValue] = useState('');

  const handleSubmit = (event) => {
    event.preventDefault();
    console.log('Submitted value:', inputValue);
  };

  const handleInputChange = (event) => {
    setInputValue(event.target.value);
  };

  return (
    <form onSubmit={handleSubmit}>
      <input type="text" value={inputValue} onChange={handleInputChange} />
      <button type="submit">Submit</button>
      <h2>Submitted value by Sangram is {inputValue}</h2>
    </form>
  );
}

export default P5i;

q2
import React, { useState } from 'react';

function KeyDown() {
  const [inputValue, setInputValue] = useState('');

  const handleKeyDown = (event) => {
    if (event.key === 'Enter') {
      console.log('Submitted value:', inputValue);
    }
  };

  const handleInputChange = (event) => {
    setInputValue(event.target.value);
  };

  return (
    <div>
      <input
        type="text"
        value={inputValue}
        onKeyDown={handleKeyDown}
        onChange={handleInputChange}
      />
      <p>{inputValue}</p>
    </div>
  );
}

export default KeyDown;


Q3
import React, { useState } from 'react';

function MultipleValuesArr() {
  const initialFriends = ["Sangram", "Samidha", "Anusha", "Arya"];
  const [friends, setFriends] = useState(initialFriends);
  const [newFriend, setNewFriend] = useState("");

  const handleAddFriend = () => {
    if (newFriend.trim()) {
      setFriends([...friends, newFriend]);
      setNewFriend("");
    }
  };

  return (
    <div>
      <h1>List</h1>
      <ul>
        {friends.map((friend, index) => (
          <li key={index}>{friend}</li>
        ))}
      </ul>
      <input
        type="text"
        value={newFriend}
        onChange={(e) => setNewFriend(e.target.value)}
        placeholder="Enter friend name"
      />
      <button onClick={handleAddFriend}>Add Friend</button>
    </div>
  );
}

export default MultipleValuesArr;


q4
import React, { useState } from "react";

function AddRemoveArr() {
  const [users, setUsers] = useState([
    { id: 1, username: "Sangram" },
    { id: 2, username: "Samidha" }
  ]);

  const addUser = () => {
    const newUser = {
      id: users.length + 1,
      username: `User ${users.length + 1}`
    };
    setUsers([...users, newUser]);
  };

  const removeUser = (index) => {
    const newUsers = users.filter((_, i) => i !== index);
    setUsers(newUsers);
  };

  const addAfter = (index) => {
    const newUser = {
      id: users.length + 1,
      username: `User ${users.length + 1}`
    };
    const newUsers = [...users];
    newUsers.splice(index + 1, 0, newUser);
    setUsers(newUsers);
  };

  return (
    <div>
      <button onClick={addUser}>Add User</button>
      {users.map((user, index) => (
        <div key={user.id} className="user">
          {user.username}
          <button onClick={() => removeUser(index)}>Remove User</button>
          <button onClick={() => addAfter(index)}>Add After</button>
        </div>
      ))}
    </div>
  );
}

export default AddRemoveArr;
